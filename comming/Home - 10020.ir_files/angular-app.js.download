define(["angular", "angular_slider", "angular_pagination", "angular_sanitize"], function(angular)
{
	var app = angular.module("app_custom", ["angular.slider", "angular.pagination", "angular.sanitize"]).filter("airline_image", function()
		{
			return function(input)
			{
			


				// provide star image path
				return input !== undefined ? base_url+"assets/images/airline_logos/"+input+".gif" : undefined;
			}
		}).filter("split_price", function()
		{
			return function(input, seperator)
			{
				// custom split
				return input !== undefined && input !== null ? input.split(seperator) : undefined;
			}
		}).filter("mins_to_time", function()
		{
			return function(input)
			{
				// provide star image path
				var minutes = input !== undefined && parseInt(input) > 0 ? input : "0";
				var hours = Math.floor(minutes / 60);
				var mins = Math.floor(minutes % 60);
				return ("0"+hours).slice(-2)+":"+("0"+mins).slice(-2)+" Hrs";
			}
		}).filter("airport_city", function()
		{
			return function(input, airports)
			{
				var result = input;
				var keep_search = true;
				var i = 1;
				if(airports !== undefined)
					angular.forEach(airports, function(value)
					{
						if(keep_search === true)
							if(value.airport_code === input)
							{
								keep_search = false;
								if(value.city_link === null && value.airport_link !== null)
									result = value.city+" ("+input+") <a target='_blank' href='"+value.airport_link+"'> <i class='fa fa-plane'></i></a>";
								else if(value.city_link !== null && value.airport_link === null)
									result = "<a target='_blank' href='"+value.city_link+"'>"+value.city+" ("+input+") <i class='fa fa-info-circle'></i></a>";
								else if(value.city_link !== null && value.airport_link !== null)
									result = "<a title='City Details' target='_blank' href='"+value.city_link+"'>"+value.city+" ("+input+") <i class='fa fa-info-circle'></i></a> <a title='Airport Details' target='_blank' href='"+value.airport_link+"'> <i class='fa fa-plane'></i></a>";
								else
									result = value.city+" ("+input+")";
							}
					});
				return result;
			}
		}).filter("airport_city_only", function()
		{ 
			return function(from, to, airports)
			{
				var result = from + " <i class='fa fa-arrow-right'> " + to;
				var keep_search = true;
				var i = 1;
				arrow = (language == 'en')?'right':'left'; 
				if(airports !== undefined)
				{	
					angular.forEach(airports, function(value)
					{	
						var city = value.city;

						var arabic = /[\u0600-\u06FF]/;
						if(arabic.test(city) == true){
							var splitStr = city.split('،');
						    var city = splitStr[0];
						}

						if(keep_search === true)
							if(value.airport_code === from)
							{
								keep_search = false;
								if(value.city_link === "" && value.airport_link !== "")
									result = city+" <a target='_blank' href='"+value.airport_link+"'> <i class='fa fa-plane'></i></a>";
								else if(value.city_link !== "" && value.airport_link === "")
									result = "<a target='_blank' href='"+value.city_link+"'>"+city+" <i class='fa fa-info-circle'></i></a>";
								else if(value.city_link !== "" && value.airport_link !== "")
									result = "<a title='City Details' target='_blank' href='"+value.city_link+"'>"+city+" <i class='fa fa-info-circle'></i></a> <a title='Airport Details' target='_blank' href='"+value.airport_link+"'> <i class='fa fa-plane'></i></a>";
								else
									result = city;
							}
					});
					keep_search = true;
					angular.forEach(airports, function(value)
					{	
						var city = value.city;

						var arabic = /[\u0600-\u06FF]/;
						if(arabic.test(city) == true){
							var splitStr = city.split('،');
						    var city = splitStr[0];
						}
						
						if(keep_search === true)
							if(value.airport_code === to)
							{
								keep_search = false;
								if(value.city_link === "" && value.airport_link !== "")
									result += " <i class='fa fa-arrow-"+arrow+"'> " +city+" <a target='_blank' href='"+value.airport_link+"'> <i class='fa fa-plane'></i></a>";
								else if(value.city_link !== "" && value.airport_link === "")
									result += " <i class='fa fa-arrow-"+arrow+"'> " +"<a target='_blank' href='"+value.city_link+"'>"+city+" <i class='fa fa-info-circle'></i></a>";
								else if(value.city_link !== "" && value.airport_link !== "")
									result += " <i class='fa fa-arrow-"+arrow+"'> " +"<a title='City Details' target='_blank' href='"+value.city_link+"'>"+city+" <i class='fa fa-info-circle'></i></a> <a title='Airport Details' target='_blank' href='"+value.airport_link+"'> <i class='fa fa-plane'></i></a>";
								else
									result += " <i class='fa fa-arrow-"+arrow+"'> " +city;
							}
					});
				}
				return result;
			}
		}).filter("airline_name", function()
		{
			return function(input, airlines)
			{
				var result = input;
				if(airlines !== undefined)
					angular.forEach(airlines, function(value)
					{
						if(value.airline_code === input)
						{
							result = value.airline_name;
							return result;
						}
					});
				return result;
			}
		}).filter("stops_text", function()
		{
			return function(input)
			{
				if(input === "0")
					return "Direct";
				else if(input === "1")
					return "One Stop Coach";
				else
					return "Multi Stop Coach";
			}
		}).filter("journey_duration", function()
		{
			return function(input)
			{
				minutes = 0;
				if(input !== undefined)
					angular.forEach(input, function(value)
					{
						minutes += parseInt(value.journey_duration);
					});
				var hours = Math.floor(minutes/ 60);
				var mins = Math.floor(minutes% 60);
				return ("0"+hours).slice(-2)+":"+("0"+mins).slice(-2)+" Hrs";
			}
		}).filter("flight_options", function()
		{
			return function(input)
			{
				return input === "WebFare" ? "Baggage Selection Applicable" : "Ticket Reservation Applicable";
			}
		}).filter("readable_dttm", function()
		{
			return function(i_dttm)
			{
				var i_dttm_arr = i_dttm.split(" ");
				var i_dt = i_dttm_arr[0];
				var i_dt_arr = i_dt.split("-");
				var i_tm = i_dttm_arr[1];
				i_tm = i_tm.split(":");
				i_tm.pop();
				o_tm = i_tm.join(":");
				var dobj, o_dt;
				// dobj = new Date(i_dt_arr[0], i_dt_arr[1], i_dt_arr[2]);
				dobj = new Date(i_dt);
				//o_dt = dobj.toDateString();
				dobj = dobj.toString().split(":");
				dobj = dobj[0].split(" ");
				dobj.pop();
				// o_dt = dobj.join(" ");
				o_dt = dobj[2]+" "+dobj[1]+" "+dobj[3]; // d M Y format
				//o_dt = dobj.toISOString();
				// o_dt = dobj.toISOString();
				//o_dt = dobj.toISOString();
				// o_dt = dobj.toISOString();
				return o_dt+" "+o_tm;
			}
		}).filter("fa_readable_dt", function()
		{
			return function(i_dttm)
			{
				var i_dttm_arr = i_dttm.split(" ");
				var i_dt = i_dttm_arr[0];
				i_dt = i_dt.split("-");
				dobj = StdDate_to_persian(i_dt[2], i_dt[1], i_dt[0]);
				return dobj;
			}
		}).filter("fa_readable_tm", function()
		{
			return function(i_dttm)
			{
				var i_dttm_arr = i_dttm.split(" ");
				var i_dt = i_dttm_arr[0];
				var i_tm = i_dttm_arr[1];
				i_tm = i_tm.split(":");
				i_tm.pop();
				o_tm = i_tm.join(":");
				return o_tm;
			}
		}).filter("custom_currency", function()
		{
			return function(amount, currency_name, value)
			{
				decimals = currency_name === "IRR" ? 0 : 2;
				converts = currency_name === "IRR" ? 0 : 0;
				amount = parseFloat(amount) / parseFloat(value);
				decPoint = ".";
				thousandsSep = ",";
				digits = {"0" :"٠", "1" : "١", "2" : "٢", "3" : "٣", "4" : "٤", "5" : "٥", "6" : "٦", "7" : "٧", "8" : "٨", "9" : "٩"};

				var rounded_number = Math.round( Math.abs( amount ) * ("1e" + decimals) ) + "";
				// add zeros to decimalString if amount of decimals indicates it
				rounded_number = (1 > amount && -1 < amount && rounded_number.length <= decimals)
							? Array(decimals - rounded_number.length + 1).join("0") + rounded_number : rounded_number;
				var amount_string = decimals ? rounded_number.slice(0, decimals * -1) : rounded_number.slice(0);
				var checknull = parseInt(amount_string) || 0;

				// check if the value is less than one to prepend a 0
				amount_string = (checknull == 0) ? "0": amount_string;
				var decimals_str = decimals ? rounded_number.slice(decimals * -1) : '';
				
				var formatted_number = "";
				while(amount_string.length > 3)
				{
					formatted_number = thousandsSep + amount_string.slice(-3) + formatted_number;
					amount_string = amount_string.slice(0,-3);
				}
				if(converts === 0)
					return currency_name + " " + (amount < 0 ? "-" : "") + amount_string + formatted_number + (decimals_str ? (decPoint + decimals_str) : "");
				else
				{
					var temp_result = currency_name + " " + (amount < 0 ? "-" : "") + amount_string + formatted_number + (decimals_str ? (decPoint + decimals_str) : "");
					return temp_result.multi_replace(digits);
				}
			}
		}).filter("star_image", function()
		{
			return function(input)
			{
				// provide star image path
				return input !== undefined ? base_url+"assets/images/stars/star_"+input+".png" : undefined;
			}
		}).filter("hotel_image", function()
		{
			return function(input)
			{
				// provide star image path
				return input === undefined || input === "" || input === null ? base_url+"assets/images/no_hotel_img.png" : input;
			}
		}).filter("truncate", function()
		{
			return function(input, length)
			{
				// truncate to specified length of string
				return $.trim(input).substring(0, length).split(" ").slice(0, -1).join(" ") + "...";
			}
		}).filter("split", function()
		{
			return function(input, splitChar, splitIndex)
			{
				// do some bounds checking here to ensure it has that index
				return input.split(splitChar)[splitIndex];
			}
		}).filter("encrypt", function($base64)
		{
			return function(input)
			{
				var base64EncodedString = $base64.encode(input);
				return encodeURIComponent(base64EncodedString);
			}
		}).filter("decrypt", function($base64)
		{
			return function(input)
			{
				var base64EncodedString = decodeURIComponent(input);
				return encodeURIComponent(base64EncodedString);
			}
		});
	return app;
});